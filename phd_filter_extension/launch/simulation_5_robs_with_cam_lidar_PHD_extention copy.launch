<launch>

<!-- put global filter params here -->
<param  name = "MIN_MD_TO_MERGE"        type = "int"        value = "3"                      />
<param  name = "measurement_topic_name" type = "str"        value = "/lidar_extractions"     />
<param  name = "odom_topic_name"        type = "str"        value = "/Robot1/odom"           />
<param  name = "filter_running_speed"   type = "int"        value = "20"                     />
<param  name = "sensor_noise"           type = "double"     value = "0.0025"                 />
<param  name = "minimum_weight"         type = "double"     value = "0.0001"                 /> <!-- prune weight -->
<param  name = "birth_targets_cov"      type = "double"     value = "3"                      /> <!-- birth covariance 5m-->
<param  name = "pd_buffer_size"         type = "int"        value = "100"                    /> <!-- if pd buffer used number should be > 0 -->
<param  name = "sensor_pd"              type = "bool"       value = "true"                   />
<param  name = "camera_enabled"         type = "bool"       value = "true"                   />
<param  name = "camera_topic_name"      type = "str"        value = "/Robot1/camera_targets" />
<param  name = "camera_fov"             type = "double"     value = "60.0"                   />
<param  name = "cam_resol_x"            type = "double"     value = "640.0"                  />
<param  name = "cam_resol_y"            type = "double"     value = "480.0"                  />
<param  name = "camera_pd_inside_fov"   type = "double"     value = "0.99"                   /> <!-- probability that a target will be detected when inside fov -->
<param  name = "lidar_range"            type = "double"     value = "5.0"                    /> <!-- lidar range = 5 in the bag -->
<param  name = "gazebo_sim_rosbag"      type = "bool"       value = "true"                   />

<!-- lidar extraction node -->
<!-- probability list for the robots -->
<include file = "$(find lidarScan_robot_extractor)/launch/robot_extractor_gazebo.launch" />
<rosparam   param = "pd_for_each_robot">        [0.9, 0.9, 0.9, 0.9, 0.9, 0.9]           </rosparam> 

<group ns = "adaptive">
    <param name = "filter_setting"      type = "str"    value = "adaptive"      />
    <param name = "adaptivePSParam"     type = "int"    value = "10"            /> <!-- how long to keep estimate in PS-->
    <param name = "sensor_pd"           type = "bool"   value = "false"         />
    <!-- cpp nodes here-->
    <!-- <node 
        name    = "phd_filter_node" 
        pkg     = "phd_filter_extension"  
        type    = "phd_filter_extension_node" 
        output  = "log"
    /> -->
</group>

<group ns = "Standard">
    <param name = "filter_setting"      type = "str"            value = "Standard"  />
    <param name = "PD"                  type = "double"         value = "0.9"       />
    <param name = "PS"                  type = "double"         value = "0.9"       />
    <param name    = "sensor_pd"        type = "bool"           value = "false"     />
    <!-- cpp nodes here-->
    <!-- <node 
        name    = "phd_filter_node" 
        pkg     = "phd_filter_extension"  
        type    = "phd_filter_extension_node" 
        output  = "log"
    /> -->
</group>

<group ns = "adaptive_modified">
    <param      name    = "filter_setting"          type = "str"        value = "adaptive"                  />
    <param      name    = "adaptivePSParam"         type = "int"        value = "10"                        />
    <param      name    = "sensor_pd"               type = "bool"       value = "true"                      />
    <!-- cpp nodes here-->
    <node       name    = "phd_filter_node"          
                pkg     = "phd_filter_extension"    
                type    = "phd_filter_extension_node"  
                output  = "log"
                required = "true"
    />
</group>

<!-- plotter -->
<!-- <include    file    = "$(find phd_filter_extension)/launch/plotter.launch"      /> -->

<!-- Simulation launch file included here -->
<include file = "$(find catabot_gazebo_simulation)/launch/five_robots_inside_arena.launch" />

<arg    name = "rviz_config_path"       default = "$(find phd_filter_extension)/rviz_config_files/gazebo_sim.rviz" />

</launch>
<?xml version="1.0"?>
<robot name="differential_drive_base" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- properties -->
  <property name="cam_side" value="0.03" />

  <property name="M_PI" value="3.1415926535897931" />
  <property name="M_PI_2" value="1.570796327" />
  <property name="M_PI_4" value="0.78539816339" />

  <!-- Macro for calculating inertia of cylinder -->
  <macro name="cylinder_inertia" params="m r h">
    <inertia  ixx="${m*(3*r*r+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(3*r*r+h*h)/12}" iyz = "0"
              izz="${m*r*r/2}" /> 
  </macro>

<!-- Macro for calculating inertia of box -->
  <macro name="box_inertia" params="m l w h">
    <inertia  ixx="${m*(w*w+h*h)/12}" ixy = "0" ixz = "0"
              iyy="${m*(l*l+h*h)/12}" iyz = "0"
              izz="${m*(l*l+w*w)/12}" /> 
  </macro>
  
  <xacro:macro name="differential_drive_base" params="base_link base_length base_width base_height base_mass wheel_height wheel_radius wheel_mass"> 


  <!-- BASE-LINK -->
  <!--Actual body/chassis of the robot-->
  <link name="${base_link}">
    <inertial>
      <mass value="${base_mass}" />
      <origin xyz="0 0 0" />
      <!--The 3x3 rotational inertia matrix. -->
        <box_inertia  m="${base_mass}" l="${base_length}" w="${base_width}" h="${base_height}" />

    </inertial>    
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
         <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
      <material name="White" />
    </visual>  
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0 " />
      <geometry>
         <box size="${base_length} ${base_width} ${base_height}"/>
      </geometry>
    </collision>     
  </link>
  <gazebo reference="${base_link}">
    <material>Gazebo/White</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>


	<!-- caster wheel -->
	<link name="caster_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
        <sphere radius="0.032"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
        <sphere radius="0.032"/>
      </geometry>
      <material name="black" />
    </visual>
  </link>

  <gazebo reference="caster_link">
      <mu1 value="0.0"/>
      <mu2 value="0.0"/>
    <material>Gazebo/black</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="caster_joint" type="fixed">
    <origin xyz="${base_length/2} 0 ${-base_height/2}" rpy="0 0 0" />
    <parent link="${base_link}"/>
    <child link="caster_link" />
  </joint>



	<!-- RIGHT WHEEL -->
  <link name="back_right_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 ${M_PI/2} ${M_PI/2}" /> 
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
      <material name="DarkGray" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 ${M_PI/2} ${M_PI/2}" />
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}" />
      <origin xyz="0 0 0" rpy="0 ${M_PI/2} ${M_PI/2}" />
      <cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
    </inertial>
  </link>

  <gazebo reference="back_right_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <!--kp  value="10000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/-->
    <material>Gazebo/Grey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="back_right_wheel_joint" type="continuous">
    <parent link="${base_link}"/>
    <child link="back_right_wheel"/>
    <origin xyz="${-base_length/2+wheel_radius} ${-base_width/2-wheel_height/2} ${-base_height/2}" rpy="0 0 0" /> 
    <axis xyz="0 1 0" rpy="0 0 0" />
    <limit effort="1000" velocity="1000"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>



	<!-- LEFT WHEEL -->
  <link name="back_left_wheel">
    <visual>
      <origin xyz="0 0 0" rpy="0 ${M_PI/2} ${M_PI/2}" /> 
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
      <material name="DarkGray" />
    </visual>
    <collision>
      <origin xyz="0 0 0" rpy="0 ${M_PI/2} ${M_PI/2}" />
      <geometry>
        <cylinder length="${wheel_height}" radius="${wheel_radius}" />
      </geometry>
    </collision>
    <inertial>
      <mass value="${wheel_mass}" />
      <origin xyz="0 0 0" rpy="0 ${M_PI/2} ${M_PI/2}" />
      <cylinder_inertia  m="${wheel_mass}" r="${wheel_radius}" h="${wheel_height}" />
    </inertial>
  </link>

  <gazebo reference="back_left_wheel">
    <mu1 value="1.0"/>
    <mu2 value="1.0"/>
    <!--kp  value="10000.0" />
    <kd  value="1.0" />
    <fdir1 value="1 0 0"/-->
    <material>Gazebo/Grey</material>
    <turnGravityOff>false</turnGravityOff>
  </gazebo>

  <joint name="back_left_wheel_joint" type="continuous">
    <parent link="${base_link}"/>
    <child link="back_left_wheel"/>
    <origin xyz="${-base_length/2+wheel_radius} ${base_width/2+wheel_height/2} ${-base_height/2}" rpy="0 0 0" /> 
    <axis xyz="0 1 0" rpy="0 0 0" />
    <limit effort="100" velocity="100"/>
    <joint_properties damping="0.0" friction="0.0"/>
  </joint>




<gazebo>
  <!-- differential drive controller (for two wheels) -->
	<plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">

    <updateRate>10</updateRate>
    <leftJoint>back_left_wheel_joint</leftJoint>
    <rightJoint>back_right_wheel_joint</rightJoint>
    <wheelSeparation>${base_width+2*wheel_height}</wheelSeparation>
    <wheelDiameter>${2*wheel_radius}</wheelDiameter>
    <wheelAcceleration>1.8</wheelAcceleration>
    <wheelTorque>200</wheelTorque>
    <commandTopic>cmd_vel</commandTopic>
    <odometryTopic>odom</odometryTopic>
    <odometryFrame>odom</odometryFrame>
    <robotBaseFrame>base_footprint</robotBaseFrame>
    <!-- Odometry source, 0 for ENCODER, 1 for WORLD, defaults to WORLD -->
    <odometrySource>1</odometrySource>
    <publishWheelTF>false</publishWheelTF>
    <publishOdom>true</publishOdom>
    <publishWheelJointState>false</publishWheelJointState>
    <legacyMode>false</legacyMode>
  </plugin>

  <plugin name="imu_plugin" filename="libgazebo_ros_imu.so">
    <alwaysOn>true</alwaysOn>
    <bodyName>${base_link}</bodyName>
    <topicName>imu</topicName>
    <serviceName>imu_service</serviceName>
    <gaussianNoise>0.0</gaussianNoise>
    <updateRate>20.0</updateRate>
  </plugin>
</gazebo>
	
   
  </xacro:macro>
</robot>

<?xml version="1.0"?>
<robot name="cam" xmlns:xacro="http://www.ros.org/wiki/xacro">
  
  <!-- properties -->
  <property name="cam_side" value="0.03" />

  <property name="M_PI" value="3.1415926535897931" />
  <property name="M_PI_2" value="1.570796327" />
  <property name="M_PI_4" value="0.78539816339" />
  
  <xacro:macro name="cam" params="parent x y z roll pitch yaw W H hfov focal"> <!--fb : front, back ; lr: left, right -->


	<!-- camera sensor -->
	<link name="cam_link">
    <collision>
      <origin xyz="0 0 0" rpy="0 0 0"/>
      <geometry>
				<box size="${cam_side} ${cam_side} ${cam_side}"/>
      </geometry>
    </collision>
    <visual>
      <origin xyz="0 0 0" rpy="0 0 0" />
      <geometry>
				<box size="${cam_side} ${cam_side} ${cam_side}"/>
      </geometry>
      <material name="Blue" />
    </visual>
  </link>

  <gazebo reference="cam_link">
    <material>Gazebo/Blue</material>
    <turnGravityOff>false</turnGravityOff>
    <sensor name='camera' type='camera'>
    <camera name="head">
			<save enabled = "true">
				<path>/tmp/camera_save</path>
			</save>	
		  <horizontal_fov>${hfov}</horizontal_fov>
		  <image>
				<width>${W}</width>
				<height>${H}</height>
				<format>R8G8B8</format>
		  </image>
		  <clip>
		    <near>0.02</near>
		    <far>300</far>
		  </clip>
			<lens>
		    <!-- type element is mandatory -->
		    <type>custom</type>
		    <!-- manually defined mapping function r = c1*f*fun(theta/c2 + c3) -->
		    <!-- More information here: https://en.wikipedia.org/wiki/Fisheye_lens#Mapping_function -->
		    <custom_function>
		      <c1>1.05</c1>
		      <!-- linear scaling -->
		      <c2>4</c2>
		      <!-- angle scaling -->
		      <f>${focal}</f>
		      <!-- one more scaling parameter -->
		      <fun>tan</fun>
		      <!-- one of sin,tan,id -->
		    </custom_function> 
		    <!-- if it is set to `true` your horizontal FOV will ramain as defined -->
		    <!-- othervise it depends on lens type and custom function, if there is one -->
		    <scale_to_hfov>true</scale_to_hfov>
		    <!-- clip everything that is outside of this angle -->
		    <cutoff_angle>3.1415</cutoff_angle>
		    <!-- resolution of the cubemap texture, the highter it is - the sharper is your image -->
		    <env_texture_size>512</env_texture_size>
		  </lens>
    </camera>
    <always_on>1</always_on>
    <update_rate>5</update_rate>
    <visualize>1</visualize>
    <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
    <alwaysOn>true</alwaysOn>
    <updateRate>0.0</updateRate>
    <cameraName>iris/camera</cameraName>
    <imageTopicName>image_raw</imageTopicName>
    <cameraInfoTopicName>camera_info</cameraInfoTopicName>
    <frameName>camera_link</frameName>
    <hackBaseline>0.07</hackBaseline>
    <distortionK1>0.0</distortionK1>
    <distortionK2>0.0</distortionK2>
    <distortionK3>0.0</distortionK3>
    <distortionT1>0.0</distortionT1>
    <distortionT2>0.0</distortionT2>
  </plugin>
  </sensor>
  </gazebo>

  <joint name="cam_joint" type="fixed">
    <origin xyz="${x} ${y} ${z+cam_side/2}" rpy="${roll} ${pitch} ${yaw}" />
    <parent link="${parent}"/>
    <child link="cam_link" />
  </joint>
   
  </xacro:macro>
</robot>
